@page "/missions-list-page"
@using TechDispoB.Models
@using TechDispoB.Services;
@inject IAppService AppService;
@inject NavigationManager Navigation


<h3>Missions</h3>

<div class="row">
    @if (missions == null)
    {
        <div class="col-12">
            <p>Chargement des missions ...</p>
        </div>
    }
    else
    {
        @foreach (var mission in missions)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title">@mission.Name</h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">
                            @((mission.Description?.Length > 100)
                                ? mission.Description.Substring(0, 100) + "..."
                                : mission.Description)
                        </p>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Ville : @mission.Ville</li>
                            <li class="list-group-item">Distance : 35 km</li>
                            <li class="list-group-item">Date : @mission.StartDate.ToShortDateString()</li>
                        </ul>
                        <div class="d-flex justify-content-between align-items-center mt-3">

                            @*<a @onclick="@(()=>Console.WriteLine(mission.Name))" href="PopUpMission" class="btn btn-primary">Details</a>*@
                            <a @onclick="@(()=> ShowDetailsMission(mission.Id))" class="btn btn-primary">Details</a>
                            <a class="btn btn-secondary" href="#">Agenda</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@if (errorMessage != null)
{
    <p>@errorMessage</p>
    Console.WriteLine(errorMessage);
}


@code {
    List<MissionDto>? missions;
    string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {

        var userId = await SecureStorage.GetAsync("userId");

        if (string.IsNullOrEmpty(userId))
        {
            Navigation.NavigateTo(AppRoutes.Login , true);

        }
        missions = await AppService.GetMissionsForUserAsync(userId);

    }
    void ShowDetailsMission(int missionId)
    {
        try
        {
            Console.WriteLine("mission id trouvé " + missionId);
            Navigation.NavigateTo($"mission-page/{missionId}");
           
        }
        catch(Exception ex)
        {
            Console.WriteLine($"Error navigating to mission details page: {ex.Message}");
        }
    }


}
